name: Deploy VM1 (CI/CD)

on:
  push:
    branches:
      - main 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 1. Login CRÍTICO: Passa Secrets diretamente para a Action
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Nome que você usou!

      # 2. Build/Push: Usa secrets.DOCKERHUB_USERNAME na sintaxe de shell
      - name: Build and push auth-service
        run: |
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}
          docker build -t $DOCKER_USER/auth-service:latest ./auth-service
          docker push $DOCKER_USER/auth-service:latest

      - name: Build and push history-service
        run: |
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}
          docker build -t $DOCKER_USER/history-service:latest ./history-service
          docker push $DOCKER_USER/history-service:latest

      - name: Build and push api-gateway
        run: |
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}
          docker build -t $DOCKER_USER/api-gateway:latest ./api-gateway
          docker push $DOCKER_USER/api-gateway:latest

      # 3. Deploy na VM: Usa Secrets diretamente na Action (sem a necessidade de bloco env)
      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "Iniciando deploy na VM..."
            cd ~/agireport-backend
            docker-compose pull
            docker-compose up -d
            echo "Deploy concluído."
