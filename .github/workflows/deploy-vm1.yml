name: Deploy VM1 (CI/CD)

on:
  push:
    branches:
      - main 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Variáveis de ambiente: Para o Deploy SSH
    env:
      VM_SSH_HOST: ${{ secrets.VM_SSH_HOST }}
      VM_SSH_USER: ${{ secrets.VM_SSH_USER }}
      VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
      PROJECT_DIR: ~/agireport-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuração de ferramentas
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # 1. Configuração do Java e cache do Gradle
      - name: Set up Java 21 Environment
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle' 

      # 2. Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      # ===============================================
      # 3. BUILDS: Usando working-directory para cada serviço
      # ===============================================

      # === AUTH-SERVICE ===
      - name: Build auth-service JAR (Gradle)
        # O working-directory é CRÍTICO: Navega para a pasta do serviço
        working-directory: ./auth-service
        run: |
          # 1. Dá permissão ao gradlew DENTRO DA PASTA do serviço
          chmod +x ./gradlew 
          # 2. Executa o build DENTRO da pasta
          ./gradlew build -x test 
        
      - name: Build and push auth-service Docker Image
        run: |
          DOCKER_USER=${{ secrets.DOCKER_USERNAME }}
          # O build do Docker ainda usa o caminho relativo do Dockerfile
          docker build -t $DOCKER_USER/auth-service:latest ./auth-service
          docker push $DOCKER_USER/auth-service:latest

      # === HISTORY-SERVICE ===
      - name: Build history-service JAR (Gradle)
        working-directory: ./history-service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
        
      - name: Build and push history-service Docker Image
        run: |
          DOCKER_USER=${{ secrets.DOCKER_USERNAME }}
          docker build -t $DOCKER_USER/history-service:latest ./history-service
          docker push $DOCKER_USER/history-service:latest

      # === API-GATEWAY ===
      - name: Build api-gateway JAR (Gradle)
        working-directory: ./api-gateway
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
        
      - name: Build and push api-gateway Docker Image
        run: |
          DOCKER_USER=${{ secrets.DOCKER_USERNAME }}
          docker build -t $DOCKER_USER/api-gateway:latest ./api-gateway
          docker push $DOCKER_USER/api-gateway:latest


      # ===============================================
      # 4. DEPLOY FINAL
      # ===============================================
      
      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.VM_SSH_HOST }}
          username: ${{ env.VM_SSH_USER }}
          key: ${{ env.VM_SSH_KEY }}
          script: |
            echo "Iniciando deploy na VM..."
            cd $PROJECT_DIR
            docker-compose pull
            docker-compose up -d
            echo "Deploy concluído."
